from
---------
Turn an array, promise, or iterable into an observable.

const arraySource = from([1, 2, 3]);
const subscribe = arraySource.subscribe(val => console.log(val));

output: 1,2,3
emit array as a sequence of values


Observable.from([1,2,3]).subscribe(num => console.log(num)) 
output: 1,2,3
emit array as a sequence of values


const source = from('Hello World');
const subscribe = source.subscribe(val => console.log(val));
output: 'H','e','l','l','o',' ','W','o','r','l','d'
emit string as a sequence

Observable.from(1,2,3).subscribe(num => console.log(num))
output: Error number is not observable

Observable.from('1,2,3').subscribe(num => console.log(num))
output: '1' ',' '2'  ',' '3'


				------x------

of
----------

const arraySource = from([1, 2, 3]);
const subscribe = arraySource.subscribe(val => console.log(val));

output: [1,2,3]


const arraySource = from(1, 2, 3);
const subscribe = arraySource.subscribe(val => console.log(val));

output: 1,2,3

